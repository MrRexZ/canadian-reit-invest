/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getEnumDecoder,
  getEnumEncoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from 'gill';

/**
 * Investment lifecycle status stored on-chain as a small enum.
 * We keep explicit discriminants for deterministic storage.
 */
export enum InvestmentStatus {
  Pending,
  Released,
  Refunded,
  Wired,
  ShareIssued,
  ShareSold,
}

export type InvestmentStatusArgs = InvestmentStatus;

export function getInvestmentStatusEncoder(): FixedSizeEncoder<InvestmentStatusArgs> {
  return getEnumEncoder(InvestmentStatus);
}

export function getInvestmentStatusDecoder(): FixedSizeDecoder<InvestmentStatus> {
  return getEnumDecoder(InvestmentStatus);
}

export function getInvestmentStatusCodec(): FixedSizeCodec<
  InvestmentStatusArgs,
  InvestmentStatus
> {
  return combineCodec(
    getInvestmentStatusEncoder(),
    getInvestmentStatusDecoder()
  );
}
